//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2025.07.08 at 09:05:39 AM UTC 
//


package com.example.pcit.wsdl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Hours.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Hours"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="00"/&gt;
 *     &lt;enumeration value="01"/&gt;
 *     &lt;enumeration value="02"/&gt;
 *     &lt;enumeration value="03"/&gt;
 *     &lt;enumeration value="04"/&gt;
 *     &lt;enumeration value="05"/&gt;
 *     &lt;enumeration value="06"/&gt;
 *     &lt;enumeration value="07"/&gt;
 *     &lt;enumeration value="08"/&gt;
 *     &lt;enumeration value="09"/&gt;
 *     &lt;enumeration value="10"/&gt;
 *     &lt;enumeration value="11"/&gt;
 *     &lt;enumeration value="12"/&gt;
 *     &lt;enumeration value="13"/&gt;
 *     &lt;enumeration value="14"/&gt;
 *     &lt;enumeration value="15"/&gt;
 *     &lt;enumeration value="16"/&gt;
 *     &lt;enumeration value="17"/&gt;
 *     &lt;enumeration value="18"/&gt;
 *     &lt;enumeration value="19"/&gt;
 *     &lt;enumeration value="20"/&gt;
 *     &lt;enumeration value="21"/&gt;
 *     &lt;enumeration value="22"/&gt;
 *     &lt;enumeration value="23"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "Hours", namespace = "gov:usda:aphis:pcit:PCIT_Hours")
@XmlEnum
public enum Hours {


    /**
     *  00
     * 
     */
    @XmlEnumValue("00")
    ZERO("00"),

    /**
     *  01
     * 
     */
    @XmlEnumValue("01")
    ONE("01"),

    /**
     *  02
     * 
     */
    @XmlEnumValue("02")
    TWO("02"),

    /**
     *  03
     * 
     */
    @XmlEnumValue("03")
    THREE("03"),

    /**
     *  04
     * 
     */
    @XmlEnumValue("04")
    FOUR("04"),

    /**
     *  05
     * 
     */
    @XmlEnumValue("05")
    FIVE("05"),

    /**
     *  06
     * 
     */
    @XmlEnumValue("06")
    SIX("06"),

    /**
     *  07
     * 
     */
    @XmlEnumValue("07")
    SEVEN("07"),

    /**
     *  08
     * 
     */
    @XmlEnumValue("08")
    EIGHT("08"),

    /**
     *  09
     * 
     */
    @XmlEnumValue("09")
    NINE("09"),

    /**
     *  10
     * 
     */
    @XmlEnumValue("10")
    TEN("10"),

    /**
     *  11
     * 
     */
    @XmlEnumValue("11")
    ELEVEN("11"),

    /**
     *  12
     * 
     */
    @XmlEnumValue("12")
    TWELVE("12"),

    /**
     *  13
     * 
     */
    @XmlEnumValue("13")
    THIRTEEN("13"),

    /**
     *  14
     * 
     */
    @XmlEnumValue("14")
    FOURTEEN("14"),

    /**
     *  15
     * 
     */
    @XmlEnumValue("15")
    FIFTEEN("15"),

    /**
     *  16
     * 
     */
    @XmlEnumValue("16")
    SIXTEEN("16"),

    /**
     *  17
     * 
     */
    @XmlEnumValue("17")
    SEVENTEEN("17"),

    /**
     *  18
     * 
     */
    @XmlEnumValue("18")
    EIGHTEEN("18"),

    /**
     *  19
     * 
     */
    @XmlEnumValue("19")
    NINETEEN("19"),

    /**
     *  20
     * 
     */
    @XmlEnumValue("20")
    TWENTY("20"),

    /**
     *  21
     * 
     */
    @XmlEnumValue("21")
    TWENTYONE("21"),

    /**
     *  22
     * 
     */
    @XmlEnumValue("22")
    TWENTYTWO("22"),

    /**
     *  23
     * 
     */
    @XmlEnumValue("23")
    TWENTYTHREE("23");
    private final String value;

    Hours(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Hours fromValue(String v) {
        for (Hours c: Hours.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
